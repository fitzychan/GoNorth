@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = @Localizer["Karta"];
}

<div id="gn-kartaMapContainer">
    <!-- Marker Manager Template -->
    <script type="text/html" id="gn-kartaMarkerManager">
        <h4 class="gn-clickable gn-kartaMarkerManagerLabelToggleButton" data-bind="click: toogleVisibility">
            <i class="glyphicon glyphicon-triangle-right" data-bind="visible: !isExpanded()"></i><i class="glyphicon glyphicon-triangle-bottom" data-bind="visible: isExpanded"></i> 
            <span data-bind="text: title"></span>
            <i class="glyphicon glyphicon-refresh spinning" style="display: none" data-bind="visible: isLoading"></i><i class="glyphicon glyphicon-warning-sign text-danger" title="@Localizer["ErrorOccured"]" style="display: none" data-bind="visible: errorOccured"></i>
        </h4>

        <div class="gn-kartaMarkerManagerEntryContainer" data-bind="visible: isExpanded" style="display: none">
            <div class="gn-kartaTreeViewSearchContainer" data-bind="visible: !hideSearchBar">
                <div class="input-group gn-commandWidgetTopMargin">
                    <input type="text" class="form-control" placeholder="@Localizer["Search"]" data-bind="value: searchTerm, enterPressed: startNewSearch, enable: !isLoading()"/>
                    <span class="input-group-addon gn-clickable" data-bind="click: startNewSearch, enable: !isLoading()" title="@Localizer["Search"]">
                        <i class="glyphicon glyphicon-search" data-bind="visible: !isLoading()"></i>
                        <i class="glyphicon glyphicon-refresh spinning" style="display: none" data-bind="visible: isLoading"></i>
                    </span>
                </div>
            </div>

            <ul class="gn-kartaTreeView">
                <!-- ko foreach: additionalButtons -->
                <li class="gn-kartaTreeViewEntry" data-bind="css: { 'gn-kartaTreeViewEntrySelected': $root.selectedMarkerObjectId() == buttonId }"><a class="gn-clickable" data-bind="click: function() { callback.apply($parent); }, text: title"></a></li>
                <!-- /ko -->
                
                <!-- ko foreach: loadedEntries -->
                <li class="gn-kartaTreeViewEntry" data-bind="css: { 'gn-kartaTreeViewEntrySelected': $root.selectedMarkerObjectId() == id }">
                    <a class="gn-clickable" data-bind="text: name, click: function(entry) { $parent.selectEntry(entry); }, attr: { title: name }, css: { 'gn-kartaTreeViewEntrySmall': $parent.markerChildShowId() == id }"></a>
                    <!-- ko if: $parent.markerChildShowId() == id -->
                        <i class="glyphicon glyphicon-eye-open gn-kartaTreeViewEntryMarkerEye" title="@Localizer["ShowingMarkersOfObjectTooltip"]"></i>
                    <!-- /ko -->
                </li>
                <!-- /ko -->
            </ul>

            <div class="gn-buttonContainer" data-bind="visible: !hidePaging">
                <button class="btn btn-default" data-bind="enable: currentPage() > 0 && !isLoading(), click: prevPage" title="@Localizer["PreviousPage"]">
                    <i class="glyphicon glyphicon-chevron-left"></i>
                </button>
                <button class="btn btn-default" data-bind="enable: hasMore() && !isLoading(), click: nextPage" title="@Localizer["NextPage"]">
                    <i class="glyphicon glyphicon-chevron-right"></i>
                </button>
            </div>
        </div>
    </script>

    <!-- Delete Marker Dialog -->
    <div class="modal fade" role="dialog" data-bind="modal: showConfirmDeleteDialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@Localizer["AreYouSure"]</h4>
                </div>
                <div class="modal-body">
                    <p>@Localizer["AreYouSureYouWantToDeleteTheMarker"]</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-bind="click: deleteMarker">@Localizer["Yes"]</button>
                    <button type="button" class="btn btn-default" data-bind="click: closeConfirmDeleteDialog">@Localizer["No"]</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Wait on page dialog -->
    <div class="modal fade" role="dialog" data-bind="modal: showWaitOnPageDialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">@Localizer["WaitingOnNewMarker"]</h4>
                </div>
                <div class="modal-body">
                    <p>@Localizer["DialogWillCloseOnSaveOfNewMarker"]</span></p>
                </div>
            </div>
        </div>
    </div>

    <!-- Pick name dialog -->
    <div class="modal fade" role="dialog" data-bind="modal: showMarkerNameDialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@Localizer["PickMarkerName"]</h4>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <form id="gn-markerNameForm">
                        <div class="form-group">
                            <label for="gn-markerName">@Localizer["Name"]</label>
                            <input type="text" class="form-control" id="gn-markerName" placeholder="@Localizer["Name"]" name="markerName" data-bind="value: dialogMarkerName, enterPressed: saveMarkerName" required/>
                        </div>
                        <div class="form-group" style="display: none" data-bind="visible: showMarkerNameDialogDescription">
                            <label for="gn-markerDescription">@Localizer["Description"]</label>
                            <textarea class="form-control gn-nonResizeable" id="gn-markerDescription" placeholder="@Localizer["Description"]" name="markerDescription" data-bind="value: dialogMarkerDescription"></textarea>
                        </div>
                    </form>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bind="click: saveMarkerName">@Localizer["Save"]</button>
                    <button type="button" class="btn btn-default" data-bind="click: closeMarkerNameDialog">@Localizer["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Geometry Dialog -->
    <div class="modal fade" role="dialog" data-bind="modal: showGeometrySettingDialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@Localizer["GeometryData"]</h4>
                </div>
                <div class="modal-body">
                    <form id="gn-markerGeometryForm">
                        <div class="form-group">
                            <label for="gn-markerColor">@Localizer["Color"]</label>
                            <select type="text" class="form-control" id="gn-markerColor" name="markerColor" data-bind="value: selectedGeometryColor, options: availableGeometryColors, optionsText: 'name', optionsValue: 'color'"></select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="gn-kartaGeometryDeleteButton btn btn-default" data-bind="click: openDeleteGeometryDialog">@Localizer["Delete"]</button>
                    <button type="button" class="btn btn-default" data-bind="click: saveMarkerGeometrySettings">@Localizer["Save"]</button>
                    <button type="button" class="btn btn-default" data-bind="click: closeMarkerGeometrySettingsDialog">@Localizer["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Geometry Dialog -->
    <div class="modal fade" role="dialog" data-bind="modal: showConfirmGeometryDeleteDialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@Localizer["AreYouSure"]</h4>
                </div>
                <div class="modal-body">
                    <p>@Localizer["AreYouSureYouWantToDeleteTheGeometry"]</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-bind="click: deleteGeometry">@Localizer["Yes"]</button>
                    <button type="button" class="btn btn-default" data-bind="click: closeConfirmGeometryDeleteDialog">@Localizer["No"]</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Set marker export name dialog -->
    <div class="modal fade" role="dialog" data-bind="modal: showMarkerExportNameDialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@Localizer["SetExportName"]</h4>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <div class="form-group">
                        <label for="gn-markerExportName">@Localizer["ExportName"]</label>
                        <input type="text" class="form-control" id="gn-markerExportName" placeholder="@Localizer["ExportName"]" name="markerExportName" data-bind="value: markerExportName, enterPressed: saveMarkerExportName"/>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bind="click: saveMarkerExportName">@Localizer["Save"]</button>
                    <button type="button" class="btn btn-default" data-bind="click: closeMarkerExportNameDialog">@Localizer["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>

    @if(User.IsInRole(RoleNames.ImplementationStatusTracker))
    {
        <!-- ko with: compareDialog -->
            @await Html.PartialAsync("~/Views/ImplementationStatus/CompareDialog.cshtml")
        <!-- /ko -->
    }

    
    <!-- ko with: dailyRoutineEditor -->
        <datalist id="gn-kartaNpcStates" data-bind="foreach: suggestedNpcStates">
            <option data-bind="text: $data"></option>
        </datalist>

        <!-- Add/Edit Event -->
        <div class="modal fade" role="dialog" data-bind="modal: showAddEditEventDialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title"><span data-bind="visible: !eventToEdit()">@Localizer["AddEvent"]</span><span data-bind="visible: eventToEdit">@Localizer["EditEvent"]</span></h4>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-danger gn-defaultContentTopMargin" style="display: none" data-bind="visible: addEditEventDialogErrorOccured">
                            <strong>@Localizer["Error"]</strong> @Localizer["ErrorOccured"]
                        </div>

                        <form id="gn-addEditEventForm">
                            <div class="form-group">
                                <label for="gn-eventTargetName">@Localizer["Name"]</label>
                                <input type="text" class="form-control" id="gn-eventTargetName" placeholder="@Localizer["Name"]" name="eventTargetName" data-bind="value: addEditEventName" required/>
                            </div>
                            <div class="form-group">
                                <label for="gn-addEditEventFormTimeFrameEarliest">@Localizer["RandomTimeFrame"]</label>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="gn-addEditEventFormTimeFrameEarliest" placeholder="@Localizer["EarliestTime"]" name="earliestTime" data-bind="timepicker: addEditEventEarliestTime, timepickerFormat: '@Localizer["TimeFormat"]', timepickerHoursPerDay: hoursPerDay, timepickerMinutesPerHour: minutesPerHour"/>
                                    <span class="input-group-addon">-</span>
                                    <input type="text" class="form-control gn-addEditEventLatestTimePicker" id="gn-addEditEventFormTimeFrameLatest" placeholder="@Localizer["LatestTime"]" name="latestTime" data-bind="timepicker: addEditEventLatestTime, timepickerFormat: '@Localizer["TimeFormat"]', timepickerHoursPerDay: hoursPerDay, timepickerMinutesPerHour: minutesPerHour"/>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="gn-eventTargetState">@Localizer["TargetState"]</label>
                                <input type="text" class="form-control" id="gn-eventTargetState" placeholder="@Localizer["TargetState"]" list="gn-kartaNpcStates" name="eventTargetState" data-bind="value: addEditEventTargetState"/>
                            </div>
                            <div class="form-group">
                                <label for="gn-eventTargetReachedScript">@Localizer["ScriptOnTargetReached"]</label><br/>
                                <a class="gn-clickable gn-kartaAddEditEventEditScript" data-bind="click: addEditTargetReachedScript, text: addEditEventTargetReachedScript() ? addEditEventTargetReachedScript() : '@Localizer["ClickHereToAddScript"]'"></a>
                                <a class="gn-clickable gn-kartaAddEditEventDeleteScript" data-bind="click: openConfirmDeleteScriptDialog, visible: addEditEventTargetReachedScript" title="@Localizer["DeleteScriptTooltip"]"><i class="glyphicon glyphicon-trash"></i></a>
                            </div>
                            <div class="checkbox">
                                <label><input type="checkbox" data-bind="checked: addEditEventEnabledByDefault"/>@Localizer["EnabledByDefault"]</label>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-bind="click: confirmAddEditEvent, disable: addEditEventDialogLoading">
                            <span data-bind="visible: !addEditEventDialogLoading()">@Localizer["Save"]</span>
                            <i class="glyphicon glyphicon-refresh spinning" style="display: none" data-bind="visible: addEditEventDialogLoading"></i>
                        </button>
                        <button type="button" class="btn btn-default" data-bind="click: closeAddEditEventDialog, disable: addEditEventDialogLoading">@Localizer["Cancel"]</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- ko with: objectDialog -->
            @await Html.PartialAsync("~/Views/Shared/ChooseObjectDialog.cshtml")
        <!-- /ko -->

        <!-- ko with: chooseScriptTypeDialog -->
            @await Html.PartialAsync("~/Views/Shared/ChooseScriptTypeDialog.cshtml")
        <!-- /ko -->
        
        <!-- ko with: nodeScriptDialog -->
            @await Html.PartialAsync("~/Views/Shared/NodeScriptEditor.cshtml")
        <!-- /ko -->

        <!-- ko with: codeScriptDialog -->
            @await Html.PartialAsync("~/Views/Shared/CodeScriptEditor.cshtml")
        <!-- /ko -->

        <!-- Delete Script Dialog -->
        <div class="modal fade" role="dialog" data-bind="modal: showConfirmDeleteEventDialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">@Localizer["AreYouSure"]</h4>
                    </div>
                    <div class="modal-body">
                        <p>@Localizer["AreYouSureYouWantToDeleteTheEvent"]</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-bind="click: deleteDailyRoutineEvent">@Localizer["Yes"]</button>
                        <button type="button" class="btn btn-default" data-bind="click: closeConfirmDeleteEventDialog">@Localizer["No"]</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Delete Script Dialog -->
        <div class="modal fade" role="dialog" data-bind="modal: showConfirmDeleteScriptDialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">@Localizer["AreYouSure"]</h4>
                    </div>
                    <div class="modal-body">
                        <p>@Localizer["AreYouSureYouWantToRemoveTheScript"]</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-bind="click: removeTargetReachedScript">@Localizer["Yes"]</button>
                        <button type="button" class="btn btn-default" data-bind="click: closeConfirmDeleteScriptDialog">@Localizer["No"]</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Npc is locked dialog -->
        <div class="modal fade" role="dialog" data-bind="modal: showNpcLockedByDialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">@Localizer["NpcIsLocked"]</h4>
                    </div>
                    <div class="modal-body">
                        <p>@Localizer["NpcIsLockedByPrefix"]<span data-bind="text: npcLockedBy"></span>@Localizer["NpcIsLockedByPostfix"]</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-bind="click: closeNpcLockedByDialog">@Localizer["Ok"]</button>
                    </div>
                </div>
            </div>
        </div>
    <!-- /ko -->

    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
            <h2><span data-bind="text: currentMapName">@Localizer["Karta"]</span> <i class="glyphicon glyphicon-refresh spinning gn-kartaMapLoading" style="display: none" data-bind="visible: isLoading"></i></h2>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6 gn-kartaSwitchMapContainer">
            <!-- ko with: dailyRoutineEditor -->
            <div class="gn-kartaTopBarHintIcon text-info gn-clickable" style="display: none" data-bind="visible: isEditingDailyRoutine, click: toggleDailyRoutineCallout, attr: { title: '@Localizer["EditingDailyRoutinePrefix"]' + editingDailyRoutineNpcName() + '@Localizer["EditingDailyRoutinePostfix"]' }">
                <i class="glyphicon glyphicon-triangle-right gn-kartaDailyRoutineCalloutIndiciatorIcon" data-bind="visible: !showEventCallout()"></i>
                <i class="glyphicon glyphicon-triangle-bottom gn-kartaDailyRoutineCalloutIndiciatorIcon" data-bind="visible: showEventCallout"></i>
                <i class="glyphicon glyphicon-warning-sign text-warning" title="@Localizer["TimeEventsOverlap"]" style="display: none" data-bind="visible: timeEventsOverlap"></i>
                <i class="glyphicon glyphicon-hourglass"></i>
            </div>

            <div class="panel panel-default gn-kartaDailyRoutineCallout" data-bind="visible: showEventCallout" style="display: none">
                <div class="panel-heading">@Localizer["DailyRoutineOf"]<a data-bind="href: buildNpcLink, text: editingDailyRoutineNpcName"></a></div>
                <div class="panel-body">
                    <div class="alert alert-warning gn-defaultContentTopMargin" style="display: none" data-bind="visible: timeEventsOverlap">
                        <strong>@Localizer["Warning"]</strong> @Localizer["TimeEventsOverlap"]
                    </div>

                    <div class="alert alert-info gn-defaultContentTopMargin" style="display: none" data-bind="visible: $root.isNonDefaultChapterSelected">
                        <strong>@Localizer["PleaseNote"]</strong> @Localizer["ChapterAreNotSupportedForDailyRoutines"]
                    </div>

                    <button type="button" class="btn btn-default gn-commandWidgetTopMargin" data-bind="click: toogleShowDisabledEvents">
                        <span data-bind="visible: showDisabledEvents"><i class="glyphicon glyphicon-eye-close"></i> @Localizer["HideDisabledEvents"]</span>
                        <span data-bind="visible: !showDisabledEvents()"><i class="glyphicon glyphicon-eye-open"></i> @Localizer["ShowAllEvents"]</span>
                    </button>
                </div>
                <div class="gn-kartaDailyRoutineCalloutTableContainer">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>@Localizer["Time"]</th>
                                <th>@Localizer["EventType"]</th>
                                <th>@Localizer["MovementTarget"]</th>
                                <th>@Localizer["TargetState"]</th>
                                <th>@Localizer["Script"]</th>
                                <th>@Localizer["EnabledByDefault"]</th>
                            </tr>
                        </thead>
                        <tbody data-bind="foreach: dailyRoutineEvents().sort(compareTimeEvents)">
                            <tr data-bind="visible: enabledByDefault() || $parent.showDisabledEvents()">
                                <td data-bind="timeSpan: { earliestTime: earliestTime, latestTime: latestTime }, timeSpanTimeFormat: '@Localizer["TimeFormat"]'"></td>
                                <td>
                                    <span data-bind="visible: eventType == GoNorth.DailyRoutines.EventTypes.movement">@Localizer["MovementEvent"]</span>
                                    <span data-bind="visible: eventType == GoNorth.DailyRoutines.EventTypes.script">@Localizer["ScriptEvent"]</span>
                                </td>
                                <td data-bind="text: movementTarget ? movementTarget.name : ''"></td>
                                <td data-bind="text: targetState"></td>
                                <td data-bind="text: scriptName() ? scriptName() : ''"></td>
                                <td>
                                    <span data-bind="visible: enabledByDefault">@Localizer["Yes"]</span>
                                    <span data-bind="visible: !enabledByDefault()">@Localizer["No"]</span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- /ko -->

            @if(User.IsInRole(RoleNames.Aika))
            {
                <div class="gn-kartaTopBarHintIcon text-info" title="@Localizer["YouAreEditingANonDefaultChapter"]" style="display: none" data-bind="visible: isNonDefaultChapterSelected">
                    <i class="glyphicon glyphicon-time"></i>
                </div>

                <div class="dropdown gn-inlineDropdown gn-kartaSwitchChapterButton">
                    <button class="btn btn-default dropdown-toggle gn-commandWidgetTopMargin" type="button" id="gn-switchChapterButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        <span data-bind="text: selectedChapterName"></span> <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="gn-switchChapterButton">
                        <!-- ko foreach: chapters -->
                            <li><a class="gn-clickable" data-bind="click: function(chapter) { $root.switchChapter(chapter); }, text: number + ': ' + name"></a></li>
                        <!-- /ko -->
                    </ul>
                </div>
            }

            <div class="dropdown gn-inlineDropdown gn-kartaSwitchMapButton">
                <button class="btn btn-default dropdown-toggle gn-commandWidgetTopMargin" type="button" id="gn-switchMapButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    @Localizer["SwitchMap"] <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" aria-labelledby="gn-switchMapButton">
                    <!-- ko foreach: allMaps -->
                        <li><a class="gn-clickable" data-bind="click: function(map) { $root.switchMap(map.id); }, text: name"></a></li>
                    <!-- /ko -->
                    @if(User.IsInRole(RoleNames.KartaMapManager))
                    {
                        <li class="divider"></li>
                        <li><a asp-area="" asp-controller="Karta" asp-action="ManageMaps">@Localizer["ManageMaps"]</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="alert alert-danger gn-defaultContentTopMargin" style="display: none" data-bind="visible: errorOccured">
        <strong>@Localizer["Error"]</strong> @Localizer["ErrorOccured"] <span data-bind="visible: additionalError, text: additionalError"></span>
    </div>

    <div class="alert alert-info gn-defaultContentTopMargin" style="display: none" data-bind="visible: lockedByUser">
        <strong>@Localizer["Locked"]</strong> @Localizer["LockedPrefix"]<span data-bind="text: lockedByUser"></span>@Localizer["LockedPostfix"]
    </div>

    <div class="row gn-kartaFilterRow">
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3">
        </div>
        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-9">
            @if(User.IsInRole(RoleNames.Kirja))
            {
                <label class="checkbox-inline gn-kartaVisibleCheckbox"><input type="checkbox" data-bind="checked: kirjaMarkerManager.isLayerVisible">@Localizer["ShowKirjaMarker"]</label>
            }

            @if(User.IsInRole(RoleNames.Kortisto))
            {
                <label class="checkbox-inline gn-kartaVisibleCheckbox"><input type="checkbox" data-bind="checked: kortistoMarkerManager.isLayerVisible">@Localizer["ShowKortistoMarker"]</label>
            }

            @if(User.IsInRole(RoleNames.Styr))
            {
                <label class="checkbox-inline gn-kartaVisibleCheckbox"><input type="checkbox" data-bind="checked: styrMarkerManager.isLayerVisible">@Localizer["ShowStyrMarker"]</label>
            }

            @if(User.IsInRole(RoleNames.Aika))
            {
                <label class="checkbox-inline gn-kartaVisibleCheckbox"><input type="checkbox" data-bind="checked: aikaMarkerManager.isLayerVisible">@Localizer["ShowAikaMarker"]</label>
            }

            <label class="checkbox-inline gn-kartaVisibleCheckbox"><input type="checkbox" data-bind="checked: kartaMarkerManager.isLayerVisible">@Localizer["ShowKartaMarker"]</label>
        
            <label class="checkbox-inline gn-kartaVisibleCheckbox"><input type="checkbox" data-bind="checked: noteMarkerManager.isLayerVisible">@Localizer["ShowNoteMarker"]</label>

            <!-- ko with: dailyRoutineEditor -->
                <label class="checkbox-inline gn-kartaVisibleCheckbox" data-bind="css: { 'gn-kartaVisibleCheckboxDisabled': !isEditingDailyRoutine() }"><input type="checkbox" data-bind="checked: isLayerVisible, disable: !isEditingDailyRoutine()">@Localizer["ShowDailyRoutineMarker"]</label>
            <!-- /ko -->

            <label class="checkbox-inline gn-kartaVisibleCheckbox"><input type="checkbox" data-bind="checked: showMarkerLabels">@Localizer["ShowMarkerLabels"]</label>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-3">
            @if(User.IsInRole(RoleNames.Kirja))
            {
                <div data-bind="template: { name: 'gn-kartaMarkerManager', data: kirjaMarkerManager }"></div>
            }

            @if(User.IsInRole(RoleNames.Kortisto))
            {
                <div data-bind="template: { name: 'gn-kartaMarkerManager', data: kortistoMarkerManager }"></div>
            }

            @if(User.IsInRole(RoleNames.Styr))
            {
                <div data-bind="template: { name: 'gn-kartaMarkerManager', data: styrMarkerManager }"></div>
            }

            @if(User.IsInRole(RoleNames.Aika))
            {
                <div data-bind="template: { name: 'gn-kartaMarkerManager', data: aikaMarkerManager }"></div>
            }

            <div data-bind="template: { name: 'gn-kartaMarkerManager', data: kartaMarkerManager }"></div>

            <div data-bind="template: { name: 'gn-kartaMarkerManager', data: noteMarkerManager }"></div>
        </div>
        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-9">
            <!-- ko if: mapLoaded -->
            <div class="gn-kartaMap" data-bind="map: mapUrlTemplate, mapMaxZoom: mapMaxZoom, mapImageWidth: mapImageWidth, mapImageHeight: mapImageHeight, mapClick: addMarkerToMap, mapReady: mapReady, css: { 'gn-kartaShowLabels': showMarkerLabels }"></div>
            <!-- /ko -->
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous" asp-fallback-test="jQuery.ui" asp-fallback-src="~/lib/jquery-ui/jquery-ui.min.js"></script>

    @await Html.PartialAsync("~/Views/Shared/NodeScriptEditorScripts.cshtml")

    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.4.0/leaflet.js" integrity="sha384-jV/9OyZzm1ZMHG4pfYVMmnnCtVUlZdWgZ8mNSX3CPFM4HSK2KUSP8xzLljzMDkWd" crossorigin="anonymous" asp-fallback-test="typeof L != 'undefined'" asp-fallback-src="~/lib/leaflet/dist/leaflet.js"></script>
    <script src="~/lib/leaflet-draw/dist/leaflet.draw.js"></script>
    <script src="~/lib/Leaflet.TextPath/leaflet.textpath.min.js"></script>

    <environment include="Development">
        <script src="~/lib/ace-builds/src-noconflict/ace.js"></script>
        <script src="~/lib/ace-builds/src-noconflict/ext-language_tools.js"></script>

        <script src="~/js/Karta/map.viewmodel.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/lib/ace-builds/src-min-noconflict/ace.js"></script>
        <script src="~/lib/ace-builds/src-min-noconflict/ext-language_tools.js"></script>

        <script src="~/js/Karta/map.viewmodel.min.js" asp-append-version="true"></script>
    </environment>

    <script type="text/javascript">
        GoNorth.Karta.Map.Localization = {
            Karta: "@Localizer["Karta"]",

            KirjaMarkerTitle: "@Localizer["Kirja"]",
            KirjaMarkerNewPage: "@Localizer["NewKirjaPage"]",

            KortistoMarkerTitle: "@Localizer["Kortisto"]",
            KortistoEditDailyRoutineTooltip: "@Localizer["KortistoEditDailyRoutineTooltip"]",
            RandomTimeFrame: "@Localizer["RandomTimeFrame"]",
            TargetState: "@Localizer["TargetState"]",
            ScriptOnTargetReached: "@Localizer["ScriptOnTargetReached"]",
            EnabledByDefault: "@Localizer["EnabledByDefault"]",
            Yes: "@Localizer["Yes"]",
            No: "@Localizer["No"]",

            StyrMarkerTitle: "@Localizer["Styr"]",
    
            AikaMarkerTitle: "@Localizer["Aika"]",

            KartaMarkerTitle: "@Localizer["Karta"]",
            
            NoteMarkerTitle: "@Localizer["Notes"]",
            NoteMarkerNewNote: "@Localizer["NoteMarkerNewNote"]",

            EditingDefaultChapter: "@Localizer["EditingDefaultChapter"]",

            SuccessfullyCopiedToClipboard: "@Localizer["SuccessfullyCopiedToClipboard"]",

            SetExportNameTooltip: "@Localizer["SetExportNameTooltip"]",
            CurrentExportNameTooltip: "@Localizer["CurrentExportNameTooltip"]",
            CopyLinkToMarkerTooltip: "@Localizer["CopyLinkToMarkerTooltip"]",
            EditMarkerGeometryTooltip: "@Localizer["EditMarkerGeometryTooltip"]",
            EditMarkerTooltip: "@Localizer["EditMarkerTooltip"]",
            MarkerIsNotImplementedTooltip: "@Localizer["MarkerIsNotImplementedTooltip"]",
            MarkerIsImplementedTooltip: "@Localizer["MarkerIsImplementedTooltip"]",
            DeleteMarkerTooltip: "@Localizer["DeleteMarkerTooltip"]",

            GeometryColorBlue: "@Localizer["GeometryColorBlue"]",
            GeometryColorRed: "@Localizer["GeometryColorRed"]",
            GeometryColorGreen: "@Localizer["GeometryColorGreen"]",
            GeometryColorPurple: "@Localizer["GeometryColorPurple"]",
            GeometryColorWhite: "@Localizer["GeometryColorWhite"]",
            GeometryColorYellow: "@Localizer["GeometryColorYellow"]",

            ErrorOccured: "@Localizer["ErrorOccured"]",

            TimeFormat: "@Localizer["TimeFormat"]"
        };

        L.drawLocal.draw.toolbar.actions.title = "@Localizer["DrawCancelDrawing"]";
        L.drawLocal.draw.toolbar.actions.text = "@Localizer["Cancel"]";
        L.drawLocal.draw.toolbar.finish.title = "@Localizer["DrawFinishDrawing"]";
        L.drawLocal.draw.toolbar.finish.text = "@Localizer["Finish"]";
        L.drawLocal.draw.toolbar.undo.title = "@Localizer["DrawDeleteLastPointDrawn"]";
        L.drawLocal.draw.toolbar.undo.text = "@Localizer["DrawDeleteLastPoint"]";

        L.drawLocal.draw.toolbar.buttons.polyline = "@Localizer["DrawPolyline"]";
        L.drawLocal.draw.toolbar.buttons.polygon = "@Localizer["DrawPolygon"]";
        L.drawLocal.draw.toolbar.buttons.rectangle = "@Localizer["DrawRectangle"]";
        L.drawLocal.draw.toolbar.buttons.circle = "@Localizer["DrawCircle"]";

        L.drawLocal.draw.handlers.circle.tooltip.start = "@Localizer["DrawDragToDrawCircle"]";
        L.drawLocal.draw.handlers.polygon.tooltip.start = "@Localizer["DrawClickToStartShape"]";
        L.drawLocal.draw.handlers.polygon.tooltip.cont = "@Localizer["DrawClickToContinueShape"]";
        L.drawLocal.draw.handlers.polygon.tooltip.end = "@Localizer["DrawClickFirstPointToEndShape"]";
        L.drawLocal.draw.handlers.polyline.tooltip.start = "@Localizer["DrawClickToStartLine"]";
        L.drawLocal.draw.handlers.polyline.tooltip.cont = "@Localizer["DrawClickToContinueLine"]";
        L.drawLocal.draw.handlers.polyline.tooltip.end = "@Localizer["DrawClickLastPointToEndLine"]";
        L.drawLocal.draw.handlers.rectangle.tooltip.start = "@Localizer["DrawDragToDrawRectangle"]";
        L.drawLocal.draw.handlers.simpleshape.tooltip.end = "@Localizer["DrawReleaseMouseToFinishDrawing"]";

        @if(User.IsInRole(RoleNames.Aika))
        {
            <text>
            GoNorth.Karta.Map.hasAikaRights = true;
            </text>
        }
        else
        {
            <text>
            GoNorth.Karta.Map.hasAikaRights = false;
            </text>
        }

        @if(User.IsInRole(RoleNames.ImplementationStatusTracker))
        {
            <text>
            GoNorth.Karta.Map.hasImplementationStatusTrackerRights = true;
            </text>
        }
        else
        {
            <text>
            GoNorth.Karta.Map.hasImplementationStatusTrackerRights = false;
            </text>
        }

        jQuery(document).ready(function() {
            ko.applyBindings(new GoNorth.Karta.Map.ViewModel(), jQuery("#gn-kartaMapContainer")[0]);
        });
    </script>
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.2.0/leaflet.css" integrity="sha256-LcmP8hlMTofQrGU6W2q3tUnDnDZ1QVraxfMkP060ekM=" crossorigin="anonymous" asp-fallback-test-call="leaflet-layer" asp-fallback-test-property="position" asp-fallback-test-value="relative" asp-fallback-href="~/lib/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="~/lib/leaflet-draw/dist/leaflet.draw.css" />
    @await Html.PartialAsync("~/Views/Shared/NodeScriptEditorStyles.cshtml")
}