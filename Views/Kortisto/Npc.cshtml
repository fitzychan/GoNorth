@using Microsoft.AspNetCore.Mvc.Localization
@using GoNorth.Models.FlexFieldDatabaseModels
@using GoNorth.Data.Exporting

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = @Localizer["Npc"];
}

<div id="gn-kortistoNpcContainer">
    <h2><span data-bind="visible: !isTemplateMode()">@ViewData["Title"]</span><span data-bind="visible: isTemplateMode" style="display: none">@Localizer["Template"]</span><span data-bind="visible: objectNameDisplay"> <span data-bind="text: objectNameDisplay"></span></span><span data-bind="visible: isPlayerNpc" style="display: none"> @Localizer["IsPlayerNpc"]</span></h2>

    @if(User.IsInRole(RoleNames.KortistoPlayerManager))
    {
        <!-- Mark as player dialog -->
        <div class="modal fade" role="dialog" data-bind="modal: showMarkAsPlayerDialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">@Localizer["AreYouSure"]</h4>
                    </div>
                    <div class="modal-body">
                        <p>@Localizer["AreYouSureYouWantToMarkTheNpcAsPlayer"]</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-bind="click: markAsPlayer">@Localizer["Yes"]</button>
                        <button type="button" class="btn btn-default" data-bind="click: closeMarkAsPlayerDialog">@Localizer["No"]</button>
                    </div>
                </div>
            </div>
        </div>
    }
    
    <!-- Set Name Gen Settings Dialog -->
    <div class="modal fade" role="dialog" data-bind="modal: showNameGenSettingsDialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@Localizer["NameGenSettingsTitle"]</h4>
                </div>
                <div class="modal-body">
                    <div class="alert alert-info" style="display: none" data-bind="visible: !nameGenDialogTemplate()">
                        @Localizer["YouWillNotBeAbleToUseNameGen"]
                    </div>

                    <form id="gn-nameGenTemplateForm">
                        <div class="form-group">
                            <label for="gn-nameGenTemplate">@Localizer["NameGenTemplate"] <i class="glyphicon glyphicon-warning-sign text-danger" style="display: none" data-bind="visible: nameGenTemplateError, attr: { title: nameGenTemplateErrorDescription }"></i></label>
                            <input type="text" class="form-control" id="gn-nameGenTemplate" placeholder="@Localizer["NameGenTemplate"]" name="nameGenTemplate" data-bind="value: nameGenDialogTemplate, valueUpdate: 'input', enterPressed: saveNameGenSettings"/>
                        </div>
                        <div class="form-group">
                            <label for="gn-nameGenSample">@Localizer["NameGenSample"] <a class="gn-clickable" data-bind="click: generateSampleNameGenName" title="@Localizer["NameGenGenerateNewSample"]"><i class="glyphicon glyphicon-retweet"></i></a></label>
                            <input type="text" class="form-control" id="gn-nameGenSample" placeholder="@Localizer["NameGenSample"]" name="nameGenSample" data-bind="value: nameGenSample" readonly aria-readonly="true"/>
                        </div>
                    </form>
                    
                    <p>@Localizer["NameGenExplanation"]</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bind="click: saveNameGenSettings, disable: nameGenTemplateError, attr: { title: nameGenTemplateError() ? '@Localizer["NameGenFixErrorInTemplateBeforeSaving"]' : '' }">@Localizer["Ok"]</button>
                    <button type="button" class="btn btn-default" data-bind="click: closeNameGenDialog">@Localizer["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>

    @await Html.PartialAsync("~/Views/FlexFieldDatabase/ObjectFormDialogsButtons.cshtml", new ObjectFormButtonsViewModel { Localizer = Localizer, ExportTemplateType = TemplateType.ObjectNpc })

    <!-- ko with: objectDialog -->
        @await Html.PartialAsync("~/Views/Shared/ChooseObjectDialog.cshtml")
    <!-- /ko -->

    <!-- Additional Buttons -->
    @if(User.IsInRole(RoleNames.Tale))
    {
        <button type="button" class="btn btn-default gn-commandWidgetTopMargin" data-bind="click: openTale, visible: id() && !isTemplateMode(), disable: isLoading()">
            @if(User.IsInRole(RoleNames.ImplementationStatusTracker))
            {
                <span data-bind="visible: dialogExists" style="display: none">
                    <i class="glyphicon glyphicon-ok text-success" data-bind="visible: dialogImplemented" title="@Localizer["DialogIsImplementedTooltip"]"></i>
                    <i class="glyphicon glyphicon-remove text-danger" data-bind="visible: !dialogImplemented()" title="@Localizer["DialogIsNotImplementedTooltip"]"></i>
                </span>
            }
            <i class="glyphicon glyphicon-comment"></i> @Localizer["Dialog"]
        </button>
    }

    <button type="button" class="btn btn-default gn-commandWidgetTopMargin" style="display: none" data-bind="click: openNameGenSettings, visible: isTemplateMode(), disable: isLoading() || isReadonly()"><i class="glyphicon glyphicon-cog"></i> @Localizer["NameGenSettings"]</button>
    <button type="button" class="btn btn-default gn-commandWidgetTopMargin" data-bind="click: generateName, visible: !isTemplateMode(), disable: isLoading() || isReadonly() || !nameGenTemplate(), attr: { title: !nameGenTemplate() ? '@Localizer["NoNameGenTemplateTooltip"]' : '' }"><i class="glyphicon glyphicon-transfer"></i> @Localizer["GenerateName"]</button>

    @if(User.IsInRole(RoleNames.KortistoPlayerManager))
    {
        <button type="button" class="btn btn-default gn-commandWidgetTopMargin" data-bind="click: openMarkAsPlayerDialog, visible: id() && !isPlayerNpc() && !isTemplateMode(), disable: isLoading() || isReadonly()"><i class="glyphicon glyphicon-star"></i> @Localizer["MarkAsPlayer"]</button>
    }

    @await Html.PartialAsync("~/Views/FlexFieldDatabase/ObjectFormContent.cshtml", new ObjectFormViewModel { Localizer = Localizer, ApiControllerName = "KortistoApi", ObjectIcon = "glyphicon-user" } )

    @if(User.IsInRole(RoleNames.Styr))
    {
        <!-- Inventory -->
        <div data-bind="with: inventoryForm">
            <h4 class="gn-clickable gn-defaultContentTopMargin" data-bind="click: toogleInventoryVisibility">
                <i class="glyphicon glyphicon-triangle-right" data-bind="visible: !isInventoryExpanded()"></i><i class="glyphicon glyphicon-triangle-bottom" data-bind="visible: isInventoryExpanded" style="display: none"></i> 
                @Localizer["Inventory"] <i class="glyphicon glyphicon-refresh spinning" style="display: none" data-bind="visible: isLoadingInventory"></i><i class="glyphicon glyphicon-warning-sign text-danger" title="@Localizer["ErrorOccured"]" style="display: none" data-bind="visible: loadingInventoryError"></i>
            </h4>

            <div data-bind="visible: isInventoryExpanded" style="display: none">
                <button type="button" class="btn btn-primary gn-commandWidgetTopMargin" data-bind="click: addItemToInventory, disable: $root.isLoading() || $root.isReadonly()"><i class="glyphicon glyphicon-plus"></i> @Localizer["AddItemToInventory"]</button>
                <table class="table table-striped table-bordered gn-chooseObjectDialogTable">
                    <thead>
                        <tr>
                            <th class="gn-kortistoInventoryItemNameColumn">@Localizer["Name"]</th>
                            <th>@Localizer["Quantity"]</th>
                            <th>@Localizer["Equipped"]</th>
                            <th class="gn-kortistoObjectTableActionColumn"></th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: inventoryItems">
                        <tr>
                            <td class="gn-kortistoInventoryItemNameColumn"><a class="gn-clickable" data-bind="text: name, href: $parent.buildItemUrl" target="_blank"></a></td>
                            <td><input type="text" data-bind="numeric: quantity, disable: $root.isReadonly" class="form-control"></td>
                            <td><label class="checkbox-inline"><input type="checkbox" data-bind="checked: isEquipped, disable: $root.isReadonly"></label></td>
                            <td class="gn-kortistoObjectTableActionColumn"><a class="gn-clickable" title="@Localizer["RemoveItemFromInventory"]" data-bind="click: function(item) { $parent.openRemoveItemDialog(item); }, visible: !$root.isReadonly()"><i class="glyphicon glyphicon-trash"></i></a></td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <!-- Remove Item Dialog -->
            <div class="modal fade" role="dialog" data-bind="modal: showConfirmRemoveDialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">@Localizer["AreYouSure"]</h4>
                        </div>
                        <div class="modal-body">
                            <p>@Localizer["AreYouSureYouWantToRemoveTheItem"]</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-bind="click: removeItem">@Localizer["Yes"]</button>
                            <button type="button" class="btn btn-default" data-bind="click: closeConfirmRemoveDialog">@Localizer["No"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @if(User.IsInRole(RoleNames.Evne))
    {
        <!-- Skills -->
        <div data-bind="with: skillForm">
            <h4 class="gn-clickable gn-defaultContentTopMargin" data-bind="click: toogleSkillVisibility">
                <i class="glyphicon glyphicon-triangle-right" data-bind="visible: !areSkillsExpanded()"></i><i class="glyphicon glyphicon-triangle-bottom" data-bind="visible: areSkillsExpanded" style="display: none"></i> 
                @Localizer["Skills"] <i class="glyphicon glyphicon-refresh spinning" style="display: none" data-bind="visible: isLoadingSkills"></i><i class="glyphicon glyphicon-warning-sign text-danger" title="@Localizer["ErrorOccured"]" style="display: none" data-bind="visible: loadingSkillsError"></i>
            </h4>

            <div data-bind="visible: areSkillsExpanded" style="display: none"> 
                <button type="button" class="btn btn-primary gn-commandWidgetTopMargin" data-bind="click: addSkill, disable: $root.isLoading() || $root.isReadonly()"><i class="glyphicon glyphicon-plus"></i> @Localizer["AddSkill"]</button>
                <table class="table table-striped table-bordered gn-chooseObjectDialogTable">
                    <thead>
                        <tr>
                            <th class="gn-kortistoSkillNameColumn">@Localizer["Name"]</th>
                            <th class="gn-kortistoObjectTableActionColumn"></th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: learnedSkills">
                        <tr>
                            <td class="gn-kortistoSkillNameColumn"><a class="gn-clickable" data-bind="text: name, href: $parent.buildSkillUrl" target="_blank"></a></td>
                            <td class="gn-kortistoObjectTableActionColumn"><a class="gn-clickable" title="@Localizer["RemoveSkill"]" data-bind="click: function(skill) { $parent.openRemoveSkillDialog(skill); }, visible: !$root.isReadonly()"><i class="glyphicon glyphicon-trash"></i></a></td>
                        </tr>
                    </tbody>
                </table>
            </div>
                
            <!-- Remove Skill Dialog -->
            <div class="modal fade" role="dialog" data-bind="modal: showConfirmRemoveDialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">@Localizer["AreYouSure"]</h4>
                        </div>
                        <div class="modal-body">
                            <p>@Localizer["AreYouSureYouWantToRemoveTheSkill"]</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-bind="click: removeSkill">@Localizer["Yes"]</button>
                            <button type="button" class="btn btn-default" data-bind="click: closeConfirmRemoveDialog">@Localizer["No"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Daily Routines -->
    <div data-bind="with: dailyRoutinesForm, visible: !isTemplateMode()" style="display: none">
        <datalist id="gn-kortistoNpcStates" data-bind="foreach: suggestedNpcStates">
            <option data-bind="text: $data"></option>
        </datalist>


        <h4 class="gn-clickable gn-defaultContentTopMargin" data-bind="click: toogleDailyRoutinesVisibility">
            <i class="glyphicon glyphicon-triangle-right" data-bind="visible: !isDailyRoutineExpanded()"></i><i class="glyphicon glyphicon-triangle-bottom" data-bind="visible: isDailyRoutineExpanded" style="display: none"></i> 
            @Localizer["DailyRoutine"]
        </h4>

        <div data-bind="visible: isDailyRoutineExpanded() && !$parent.id()" style="display: none">
            @Localizer["PleaseSaveToEditDailyRoutine"]
        </div>

        <div data-bind="visible: isDailyRoutineExpanded() && $parent.id()" style="display: none">
            <div class="alert alert-warning gn-defaultContentTopMargin" style="display: none" data-bind="visible: timeEventsOverlap">
                <strong>@Localizer["Warning"]</strong> @Localizer["TimeEventsOverlap"]
            </div>

            @if(User.IsInRole(RoleNames.Karta))
            {
                <button type="button" class="btn btn-primary gn-commandWidgetTopMargin" data-bind="click: addNewMovementEvent, disable: $root.isLoading() || $root.isReadonly()"><i class="glyphicon glyphicon-plus"></i> @Localizer["AddMovementEvent"]</button>
            }
            <button type="button" class="btn btn-primary gn-commandWidgetTopMargin" data-bind="click: addNewScriptEvent, disable: $root.isLoading() || $root.isReadonly()"><i class="glyphicon glyphicon-plus"></i> @Localizer["AddScriptEvent"]</button>
            <button type="button" class="btn btn-default gn-commandWidgetTopMargin" data-bind="click: toogleShowDisabledEvents, disable: $root.isLoading">
                <span data-bind="visible: showDisabledEvents"><i class="glyphicon glyphicon-eye-close"></i> @Localizer["HideDisabledEvents"]</span>
                <span data-bind="visible: !showDisabledEvents()"><i class="glyphicon glyphicon-eye-open"></i> @Localizer["ShowAllEvents"]</span>
            </button>
            <table class="table table-striped table-bordered gn-chooseObjectDialogTable">
                <thead>
                    <tr>
                        <th>@Localizer["Time"]</th>
                        <th>@Localizer["EventType"]</th>
                        <th>@Localizer["MovementTarget"]</th>
                        <th>@Localizer["TargetState"]</th>
                        <th>@Localizer["Script"]</th>
                        <th>@Localizer["EnabledByDefault"]</th>
                        <th class="gn-kortistoObjectTableActionColumn"></th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: dailyRoutineEvents().sort(compareTimeEvents)">
                    <tr data-bind="visible: enabledByDefault() || $parent.showDisabledEvents()">
                        <td data-bind="timeSpan: { earliestTime: earliestTime, latestTime: latestTime }, timeSpanTimeFormat: '@Localizer["TimeFormat"]'"></td>
                        <td>
                            <span data-bind="visible: eventType == GoNorth.DailyRoutines.EventTypes.movement">@Localizer["MovementEvent"]</span>
                            <span data-bind="visible: eventType == GoNorth.DailyRoutines.EventTypes.script">@Localizer["ScriptEvent"]</span>
                        </td>
                        <td data-bind="text: movementTarget ? movementTarget.name : ''"></td>
                        <td data-bind="text: targetState"></td>
                        <td>
                            <a class="gn-clickable" data-bind="visible: scriptType != GoNorth.DailyRoutines.ScriptTypes.none, text: scriptName, click: function(eventObj) { $parent.openEditEventScriptDialog(eventObj); }"></a>
                        </td>
                        <td>
                            <span data-bind="visible: enabledByDefault">@Localizer["Yes"]</span>
                            <span data-bind="visible: !enabledByDefault()">@Localizer["No"]</span>
                        </td>
                        <td>
                            <a class="gn-clickable" data-bind="click: function(eventObj) { $parent.openEditEventDialog(eventObj); }" title="@Localizer["EditEventToolTip"]"><i class="glyphicon glyphicon-pencil"></i></a>
                            <a class="gn-clickable" data-bind="click: function(eventObj) { $parent.openRemoveEventDialog(eventObj); }" title="@Localizer["DeleteEventToolTip"]"><i class="glyphicon glyphicon-trash"></i></a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!-- Add/Edit Event -->
        <div class="modal fade" role="dialog" data-bind="modal: showAddEditEventDialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title"><span data-bind="visible: !eventToEdit()">@Localizer["AddEvent"]</span><span data-bind="visible: eventToEdit">@Localizer["EditEvent"]</span></h4>
                    </div>
                    <div class="modal-body">
                        <form id="gn-addEditEventForm">
                            <div class="form-group">
                                <label for="gn-addEditEventFormTimeFrameEarliest">@Localizer["RandomTimeFrame"]</label>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="gn-addEditEventFormTimeFrameEarliest" placeholder="@Localizer["EarliestTime"]" name="earliestTime" data-bind="timepicker: addEditEventEarliestTime, timepickerFormat: '@Localizer["TimeFormat"]', timepickerHoursPerDay: hoursPerDay, timepickerMinutesPerHour: minutesPerHour"/>
                                    <span class="input-group-addon">-</span>
                                    <input type="text" class="form-control gn-addEditEventLatestTimePicker" id="gn-addEditEventFormTimeFrameLatest" placeholder="@Localizer["LatestTime"]" name="latestTime" data-bind="timepicker: addEditEventLatestTime, timepickerFormat: '@Localizer["TimeFormat"]', timepickerHoursPerDay: hoursPerDay, timepickerMinutesPerHour: minutesPerHour"/>
                                </div>
                            </div>
                            <div class="form-group" data-bind="visible: eventToEdit() && eventToEdit().eventType == GoNorth.DailyRoutines.EventTypes.movement">
                                <label for="gn-eventTargetState">@Localizer["TargetState"]</label>
                                <input type="text" class="form-control" id="gn-eventTargetState" placeholder="@Localizer["TargetState"]" list="gn-kortistoNpcStates" name="eventTargetState" data-bind="value: addEditEventTargetState"/>
                            </div>
                            <div class="checkbox">
                                <label><input type="checkbox" data-bind="checked: addEditEventEnabledByDefault"/>@Localizer["EnabledByDefault"]</label>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-bind="visible: !eventToEdit(), click: confirmAddScriptEventDialog">@Localizer["Next"]</button>
                        <button type="button" class="btn btn-primary" data-bind="visible: eventToEdit, click: confirmEditScriptEvent">@Localizer["Confirm"]</button>
                        <button type="button" class="btn btn-default" data-bind="click: closeAddEditEventDialog">@Localizer["Cancel"]</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Remove Event Dialog -->
        <div class="modal fade" role="dialog" data-bind="modal: showConfirmRemoveEventDialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">@Localizer["AreYouSure"]</h4>
                    </div>
                    <div class="modal-body">
                        <p>@Localizer["AreYouSureYouWantToRemoveTheEvent"]</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-bind="click: removeEvent">@Localizer["Yes"]</button>
                        <button type="button" class="btn btn-default" data-bind="click: closeConfirmRemoveEventDialog">@Localizer["No"]</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Warning that npc has no markers in any map -->
        <div class="modal fade" role="dialog" data-bind="modal: showMovementTargetMissingMapMarkerWarning">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">@Localizer["WarningNoMapMarker"]</h4>
                    </div>
                    <div class="modal-body">
                        <p>@Localizer["TheNpcHasNoMarkerInAnyMap"]</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-bind="click: redirectToMapWithMissingMapMarker">@Localizer["Continue"]</button>
                        <button type="button" class="btn btn-default" data-bind="click: closeMovementTargetMissingMapMarkerWarning">@Localizer["Cancel"]</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- ko with: chooseScriptTypeDialog -->
            @await Html.PartialAsync("~/Views/Shared/ChooseScriptTypeDialog.cshtml")
        <!-- /ko -->
        
        <!-- ko with: nodeScriptDialog -->
            @await Html.PartialAsync("~/Views/Shared/NodeScriptEditor.cshtml")
        <!-- /ko -->

        <!-- ko with: codeScriptDialog -->
            @await Html.PartialAsync("~/Views/Shared/CodeScriptEditor.cshtml")
        <!-- /ko -->
    </div>

    @await Html.PartialAsync("~/Views/FlexFieldDatabase/ObjectFormTagInput.cshtml", Localizer)

    <!-- Related objects -->
    <!-- ko if: !isTemplateMode() -->
    <hr>
    @await Html.PartialAsync("~/Views/FlexFieldDatabase/ObjectFormRelatedObjects.cshtml", new ObjectFormRelatedObjectsViewModel { Localizer = Localizer, HideKarta = false } )
    <!-- /ko -->
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    @await Html.PartialAsync("~/Views/FlexFieldDatabase/ObjectFormBaseScripts.cshtml", Localizer)
    
    @await Html.PartialAsync("~/Views/Shared/NodeScriptEditorScripts.cshtml")

    <script src="~/lib/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
    <environment include="Development">
        <script src="~/lib/namegen/namegen.js"></script>
        <script src="~/lib/ace-builds/src-noconflict/ace.js"></script>
        <script src="~/lib/ace-builds/src-noconflict/ext-language_tools.js"></script>
        
        <script src="~/js/Kortisto/npc.viewmodel.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/lib/namegen/namegen.min.js"></script>
        <script src="~/lib/ace-builds/src-min-noconflict/ace.js"></script>
        <script src="~/lib/ace-builds/src-min-noconflict/ext-language_tools.js"></script>

        <script src="~/js/Kortisto/npc.viewmodel.min.js" asp-append-version="true"></script>
    </environment>
    
    @await Html.PartialAsync("~/Views/FlexFieldDatabase/ObjectFormScriptRights.cshtml", Localizer)

    @await Html.PartialAsync("~/Views/FlexFieldDatabase/FlexFieldScriptLocalization.cshtml")

    <script type="text/javascript">
        GoNorth.Kortisto.Npc.Localization = {
            AddItemToInventory: "@Localizer["AddItemToInventory"]",
            AddSkill: "@Localizer["AddSkill"]",

            NameGenMissingClosingBracket: "@Localizer["NameGenMissingClosingBracket"]",
            NameGenUnbalancedBrackets: "@Localizer["NameGenUnbalancedBrackets"]",
            NameGenUnexpectedPointyBracketInInput: "@Localizer["NameGenUnexpectedPointyBracketInInput"]",
            NameGenUnexpectedRoundBracketInInput: "@Localizer["NameGenUnexpectedRoundBracketInInput"]",
            NameGenUnknownError: "@Localizer["NameGenUnknownError"]"
        };

        @if(User.IsInRole(RoleNames.Styr))
        {
            <text>
            GoNorth.Kortisto.Npc.hasStyrRights = true;
            </text>
        }
        else
        {
            <text>
            GoNorth.Kortisto.Npc.hasStyrRights = false;
            </text>
        }

        @if(User.IsInRole(RoleNames.Evne))
        {
            <text>
            GoNorth.Kortisto.Npc.hasEvneRights = true;
            </text>
        }
        else
        {
            <text>
            GoNorth.Kortisto.Npc.hasEvneRights = false;
            </text>
        }

        jQuery(document).ready(function() {
            ko.applyBindings(new GoNorth.Kortisto.Npc.ViewModel(), jQuery("#gn-kortistoNpcContainer")[0]);
        });
    </script>
}

@section Styles {
    @await Html.PartialAsync("~/Views/FlexFieldDatabase/ObjectFormStyles.cshtml")
    @await Html.PartialAsync("~/Views/Shared/NodeScriptEditorStyles.cshtml")
    <link rel="stylesheet" href="~/lib/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" />
}